diff -Naur linux-5.4.60-gentoo.old/drivers/usb/host/xhci.c linux-5.4.60-gentoo.new/drivers/usb/host/xhci.c
--- linux-5.4.60-gentoo.old/drivers/usb/host/xhci.c	2020-08-23 16:47:01.409097776 +0100
+++ linux-5.4.60-gentoo.new/drivers/usb/host/xhci.c	2020-09-08 00:22:53.508506736 +0100
@@ -5293,6 +5293,9 @@
 	slot_id = udev->slot_id;
 	ep_index = xhci_get_endpoint_index(&ep->desc);
 
+	trace_printk("Clear TT buffer complete for ep_index %d\n", ep_index);
+	xhci_dbg(xhci, "Clear TT buffer complete for ep_index %d\n", ep_index);
+
 	xhci->devs[slot_id]->eps[ep_index].ep_state &= ~EP_CLEARING_TT;
 	xhci_ring_doorbell_for_active_rings(xhci, slot_id, ep_index);
 	spin_unlock_irqrestore(&xhci->lock, flags);
diff -Naur linux-5.4.60-gentoo.old/drivers/usb/host/xhci-ring.c linux-5.4.60-gentoo.new/drivers/usb/host/xhci-ring.c
--- linux-5.4.60-gentoo.old/drivers/usb/host/xhci-ring.c	2020-08-23 16:47:00.164081417 +0100
+++ linux-5.4.60-gentoo.new/drivers/usb/host/xhci-ring.c	2020-09-08 00:32:38.221317985 +0100
@@ -1836,8 +1836,13 @@
 	    !(ep->ep_state & EP_CLEARING_TT)) {
 		ep->ep_state |= EP_CLEARING_TT;
 		td->urb->ep->hcpriv = td->urb->dev;
-		if (usb_hub_clear_tt_buffer(td->urb))
+		trace_printk("Clearing TT buffer\n");
+		xhci_dbg(xhci, "Clearing TT buffer\n");
+		if (usb_hub_clear_tt_buffer(td->urb)) {
 			ep->ep_state &= ~EP_CLEARING_TT;
+			trace_printk("Clear TT buffer failed\n");
+			xhci_err(xhci, "Clear TT buffer failed\n");
+		}
 	}
 }
 
@@ -1866,8 +1871,7 @@
 
 	if (reset_type == EP_HARD_RESET) {
 		ep->ep_state |= EP_HARD_CLEAR_TOGGLE;
-		xhci_cleanup_stalled_ring(xhci, slot_id, ep_index, stream_id,
-					  td);
+		xhci_cleanup_stalled_ring(xhci, slot_id, ep_index, stream_id, td);
 	}
 	xhci_ring_cmd_db(xhci);
 }
@@ -1998,10 +2002,17 @@
 		 * stall later. Hub TT buffer should only be cleared for FS/LS
 		 * devices behind HS hubs for functional stalls.
 		 */
-		if ((ep_index != 0) || (trb_comp_code != COMP_STALL_ERROR))
+		if ((ep_index != 0) || (trb_comp_code != COMP_STALL_ERROR)) {
+			/* FIXME, maybe check if on SETUP, DATA or STATUS stage?*/
 			xhci_clear_hub_tt_buffer(xhci, td, ep);
+		} else {
+		trace_printk("Skip clearing TT buffer for ep_index %d, comp_code %d\n",
+			ep_index, trb_comp_code);
+		xhci_err(xhci, "Skip clearing TT buffer for ep_index %d, comp_code %d\n",
+			ep_index, trb_comp_code);
+		}
 		xhci_cleanup_halted_endpoint(xhci, slot_id, ep_index,
-					ep_ring->stream_id, td, EP_HARD_RESET);
+			ep_ring->stream_id, td, EP_HARD_RESET);
 	} else {
 		/* Update ring dequeue pointer */
 		while (ep_ring->dequeue != td->last_trb)
